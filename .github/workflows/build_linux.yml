name: Build For Linux

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        float_precision: [single,double]
        target: [linux]
        arch: [x86_64]
        build_type: [release, debug]
        include:
          # Build type to cmake keyword.
          - build_type: release
            cmake_build_type_keyword: Release

          - build_type: debug
            cmake_build_type_keyword: RelWithDebInfo

          # Define host for each target.
          - os: ubuntu-latest
            target: linux
            lib_suffix: so

          # Define toolchain data.
          - target: linux
            arch: x86_64
            dependencies: ""
            cxxflags: -m64

    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Prepare Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.0
        with:
          vulkan-query-version: 1.3.204.0
          vulkan-components: Vulkan-Headers, Vulkan-Loader
          vulkan-use-cache: true

      # Setup CMake
      - name: Set up CMake for Linux
        shell: bash
        run: |
          if [ ! -d "${{ github.workspace }}/build" ]; then
            mkdir "${{ github.workspace }}/build"
          fi
          cd "${{ github.workspace }}/build"
          cmake "${{ github.workspace }}" -G Ninja -DCMAKE_BUILD_TYPE="${{ matrix.cmake_build_type_keyword }}" \
            -DCMAKE_CXX_FLAGS="${{ matrix.cxxflags }}" \
            -DIREE_ENABLE_WERROR_FLAG=OFF
            -DFLOAT_PRECISION=${{ matrix.float_precision }}

      - name: Build project
        shell: bash
        run: ninja -C "${{ github.workspace }}/build"

      - name: Rename lib
        shell: bash
        run: mv "build/lib/*iree-gd*.${{ matrix.lib_suffix }}" "build/${{ matrix.target }}.${{ matrix.build_type }}.${{ matrix.float_precision }}.${{ matrix.arch }}"
      
      - name: Export artifact
        uses: actions/upload-artifact@v2
        with:
          name: iree.gd
          path: ${{ matrix.target }}.${{ matrix.build_type }}.${{ matrix.arch }}
          if-no-files-found: error
