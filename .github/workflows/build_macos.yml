name: Build For Mac OS

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        target: [macos]
        arch: [x86_64, arm64]
        build_type: [release, debug]
        include:
          # Build type to cmake keyword.
          - build_type: release
            cmake_build_type_keyword: Release

          - build_type: debug
            cmake_build_type_keyword: RelWithDebInfo

          - os: macos-latest
            target: macos
            lib_suffix: dylib

          # Define toolchain data.
          - target: macos
            arch: x86_64
            cmake_arch_keyword: x86_64

          - target: macos
            arch: arm64
            cmake_arch_keyword: arm64

    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1.6.0
        with:
          xcode-version: latest

      - name: Setup CMake and Ninja
        uses: lukka/get-cmake@latest

      - name: Set up CMake for Host tools
        shell: bash
        run: |
          if [ ! -d "${{ github.workspace }}/host-tools-build" ]; then
            mkdir "${{ github.workspace }}/host-tools-build"
          fi
          cd "${{ github.workspace }}/host-tools-build"
          cmake "${{ github.workspace }}/thirdparty/iree" -G Ninja -DCMAKE_BUILD_TYPE=RelWithDebInfo \
            -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}/host-tools-build/install" \
            -DHAVE_STD_REGEX=ON -DRUN_HAVE_STD_REGEX=ON \
            -DIREE_ENABLE_WERROR_FLAG=OFF \
            -DIREE_BUILD_COMPILER=OFF

      - name: Build Host tools
        shell: bash
        run: cmake --build ${{ github.workspace }}/host-tools-build --target install

      - name: Set up CMake for MacOS
        shell: bash
        run: |
          if [ ! -d "${{ github.workspace }}/build" ]; then
            mkdir "${{ github.workspace }}/build"
          fi
          cd "${{ github.workspace }}/build"
          cmake "${{ github.workspace }}" -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type_keyword }} \
            -DIREE_HOST_BIN_DIR="${{ github.workspace }}/host-tools-build/install/bin" \
            -DCMAKE_OSX_ARCHITECTURES="${{ matrix.cmake_arch_keyword }}" \
            -DCMAKE_OSX_SYSROOT=$(xcodebuild -version -sdk macosx Path) \
            -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 \
            -DIREE_ENABLE_WERROR_FLAG=OFF \
            -DIREE_BUILD_COMPILER=OFF \
            -DIREE_BUILD_SAMPLES=OFF \
            -DIREE_BUILD_TESTS=OFF \
            -DHAVE_STD_REGEX=ON

      - name: Build project
        shell: bash
        run: cmake --build "${{ github.workspace }}/build"

      - name: Mac Sign
        uses: ughuuu/godot-cpp-template/.github/actions/sign@add-more-stuff/options-to-build
        with:
          bin-path: bin/addons/godot_whisper/bin/libgodot_whisper.macos.template_release.universal.framework
          APPLE_CERT_BASE64: ${{ secrets.APPLE_CERT_BASE64 }}
          APPLE_CERT_PASSWORD: ${{ secrets.APPLE_CERT_PASSWORD }}
          APPLE_DEV_PASSWORD: ${{ secrets.APPLE_DEV_PASSWORD }}
          APPLE_DEV_ID: ${{ secrets.APPLE_DEV_ID }}
          APPLE_DEV_TEAM_ID: ${{ secrets.APPLE_DEV_TEAM_ID }}
          APPLE_DEV_APP_ID: ${{ secrets.APPLE_DEV_APP_ID }}

      - name: Export artifact
        uses: actions/upload-artifact@v2
        with:
          name: "${{ matrix.target }}.${{ matrix.build_type }}.${{ matrix.arch }}"
          path: "${{ github.workspace }}/build/lib/*iree-gd*.${{ matrix.lib_suffix }}"
          if-no-files-found: error
